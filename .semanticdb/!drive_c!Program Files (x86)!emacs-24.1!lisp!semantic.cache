;; Object lisp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "lisp/"
  :tables (list 
   (semanticdb-table "subr.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("custom-declare-variable-list" variable nil nil [924 1118])
            ("custom-declare-variable-early" function (:arguments ("arguments")) nil [1211 1351])
            ("declare-function" function (:arguments ("fn" "file" "arglist" "fileonly")) nil [1353 2870])
            ("defalias" code nil nil [2899 2920])
            ("noreturn" function (:arguments ("form")) nil [2922 3104])
            ("1value" function (:arguments ("form")) nil [3106 3322])
            ("def-edebug-spec" function (:arguments ("symbol" "spec")) nil [3324 3784])
            ("lambda" function (:arguments ("cdr")) nil [3786 4711])
            ("apply-partially" function (:arguments ("fun" "args")) nil [4713 5128])
            ("if" code nil nil [5130 5971])
            ("when" function (:arguments ("cond" "body")) nil [5973 6261])
            ("unless" function (:arguments ("cond" "body")) nil [6263 6549])
            ("if" code nil nil [6551 9867])
            ("ignore-errors" function (:arguments ("body")) nil [9869 10087])
            ("ignore" function
               (:user-visible-flag t
                :arguments ("_ignore"))
                nil [10118 10266])
            ("error" function (:arguments ("args")) nil [10323 10652])
            ("set-advertised-calling-convention" code nil nil [10653 10723])
            ("frame-configuration-p" function (:arguments ("object")) nil [10837 11092])
            ("caar" function (:arguments ("x")) nil [11117 11188])
            ("cadr" function (:arguments ("x")) nil [11190 11261])
            ("cdar" function (:arguments ("x")) nil [11263 11334])
            ("cddr" function (:arguments ("x")) nil [11336 11407])
            ("last" function (:arguments ("list" "n")) nil [11409 11826])
            ("butlast" function (:arguments ("list" "n")) nil [11828 11989])
            ("nbutlast" function (:arguments ("list" "n")) nil [11991 12219])
            ("delete-dups" function (:arguments ("list")) nil [12221 12574])
            ("number-sequence" function (:arguments ("from" "to" "inc")) nil [12576 14400])
            ("copy-tree" function (:arguments ("tree" "vecp")) nil [14402 15151])
            ("assoc-default" function (:arguments ("key" "alist" "test" "default")) nil [15191 15991])
            ("make-obsolete" code nil nil [15993 16048])
            ("assoc-ignore-case" function (:arguments ("key" "alist")) nil [16049 16328])
            ("make-obsolete" code nil nil [16330 16395])
            ("assoc-ignore-representation" function (:arguments ("key" "alist")) nil [16396 16621])
            ("member-ignore-case" function (:arguments ("elt" "list")) nil [16623 17058])
            ("assq-delete-all" function (:arguments ("key" "alist")) nil [17060 17544])
            ("rassq-delete-all" function (:arguments ("value" "alist")) nil [17546 18039])
            ("remove" function (:arguments ("elt" "seq")) nil [18041 18394])
            ("remq" function (:arguments ("elt" "list")) nil [18396 18727])
            ("kbd" function (:arguments ("keys")) nil [18752 18957])
            ("undefined" function (:user-visible-flag t) nil [18959 19057])
            ("put" code nil nil [19152 19187])
            ("suppress-keymap" function (:arguments ("map" "nodigits")) nil [19189 19753])
            ("make-composed-keymap" function (:arguments ("maps" "parent")) nil [19755 20407])
            ("define-key-after" function (:arguments ("keymap" "key" "definition" "after")) nil [20409 22470])
            ("map-keymap-sorted" function (:arguments ("function" "keymap")) nil [22472 23152])
            ("keymap--menu-item-binding" function (:arguments ("val")) nil [23154 23624])
            ("keymap--menu-item-with-binding" function (:arguments ("item" "binding")) nil [23678 24278])
            ("keymap--merge-bindings" function (:arguments ("val1" "val2")) nil [24280 24746])
            ("keymap-canonicalize" function (:arguments ("map")) nil [24748 26651])
            ("put" code nil nil [26653 26710])
            ("keyboard-translate" function (:arguments ("from" "to")) nil [26712 27078])
            ("global-set-key" function
               (:user-visible-flag t
                :arguments ("key" "command"))
                nil [27109 27855])
            ("local-set-key" function
               (:user-visible-flag t
                :arguments ("key" "command"))
                nil [27857 28661])
            ("global-unset-key" function
               (:user-visible-flag t
                :arguments ("key"))
                nil [28663 28859])
            ("local-unset-key" function
               (:user-visible-flag t
                :arguments ("key"))
                nil [28861 29090])
            ("key-substitution-in-progress" variable nil nil [29146 29239])
            ("substitute-key-definition" function (:arguments ("olddef" "newdef" "keymap" "oldmap" "prefix")) nil [29241 30626])
            ("substitute-key-definition-key" function (:arguments ("defn" "olddef" "newdef" "prefix" "keymap")) nil [30628 32293])
            ("global-map" variable nil nil [32442 32616])
            ("esc-map" variable nil nil [32618 32758])
            ("ctl-x-map" variable nil nil [32760 32895])
            ("ctl-x-4-map" variable (:default-value (make-sparse-keymap)) nil [32897 32975])
            ("defalias" code nil nil [32976 33014])
            ("define-key" code nil nil [33015 33057])
            ("ctl-x-5-map" variable (:default-value (make-sparse-keymap)) nil [33059 33131])
            ("defalias" code nil nil [33132 33170])
            ("define-key" code nil nil [33171 33213])
            ("listify-key-sequence-1" variable
               (:constant-flag t
                :default-value (logior 128 134217728))
                nil [33253 33308])
            ("listify-key-sequence" function (:arguments ("key")) nil [33310 33548])
            ("eventp" function (:arguments ("obj")) nil [33550 33980])
            ("event-modifiers" function (:arguments ("event")) nil [33982 35276])
            ("event-basic-type" function (:arguments ("event")) nil [35278 36046])
            ("mouse-movement-p" function (:arguments ("object")) nil [36048 36181])
            ("mouse-event-p" function (:arguments ("object")) nil [36183 36401])
            ("event-start" function (:arguments ("event")) nil [36403 37108])
            ("event-end" function (:arguments ("event")) nil [37110 37924])
            ("event-click-count" function (:arguments ("event")) nil [37926 38136])
            ("posn-window" function (:arguments ("position")) nil [38193 38375])
            ("posn-area" function (:arguments ("position")) nil [38377 38701])
            ("posn-point" function (:arguments ("position")) nil [38703 38978])
            ("posn-set-point" function (:arguments ("position")) nil [38980 39300])
            ("posn-x-y" function (:arguments ("position")) nil [39302 39555])
            ("declare-function" code nil nil [39557 39623])
            ("posn-col-row" function (:arguments ("position")) nil [39625 41171])
            ("posn-actual-col-row" function (:arguments ("position")) nil [41173 41607])
            ("posn-timestamp" function (:arguments ("position")) nil [41609 41797])
            ("posn-string" function (:arguments ("position")) nil [41799 42051])
            ("posn-image" function (:arguments ("position")) nil [42053 42293])
            ("posn-object" function (:arguments ("position")) nil [42295 42664])
            ("posn-object-x-y" function (:arguments ("position")) nil [42666 42953])
            ("posn-object-width-height" function (:arguments ("position")) nil [42955 43215])
            ("define-obsolete-function-alias" code nil nil [43258 43323])
            ("define-obsolete-function-alias" code nil nil [43324 43397])
            ("define-obsolete-function-alias" code nil nil [43398 43462])
            ("define-obsolete-function-alias" code nil nil [43463 43534])
            ("define-obsolete-function-alias" code nil nil [43535 43608])
            ("define-obsolete-function-alias" code nil nil [43609 43681])
            ("make-obsolete" code nil nil [43683 43749])
            ("insert-string" function (:arguments ("args")) nil [43751 44032])
            ("make-obsolete" code nil nil [44033 44078])
            ("makehash" function (:arguments ("test")) nil [44080 44152])
            ("make-obsolete" code nil nil [44153 44202])
            ("defalias" code nil nil [44250 44284])
            ("make-obsolete" code nil nil [44285 44339])
            ("defalias" code nil nil [44340 44376])
            ("make-obsolete" code nil nil [44377 44433])
            ("make-obsolete" code nil nil [44434 44541])
            ("make-obsolete" code nil nil [44542 44603])
            ("set-advertised-calling-convention" code nil nil [44604 44678])
            ("set-advertised-calling-convention" code nil nil [44679 44780])
            ("set-advertised-calling-convention" code nil nil [44781 44849])
            ("make-obsolete-variable" code nil nil [45254 45329])
            ("make-obsolete-variable" code nil nil [45330 45409])
            ("make-obsolete-variable" code nil nil [45410 45477])
            ("make-obsolete-variable" code nil nil [45478 45543])
            ("make-obsolete-variable" code nil nil [45544 45605])
            ("make-obsolete-variable" code nil nil [45606 45677])
            ("make-obsolete-variable" code nil nil [45678 45743])
            ("make-obsolete-variable" code nil nil [45744 45805])
            ("make-obsolete-variable" code nil nil [45806 45881])
            ("make-obsolete-variable" code nil nil [45882 45959])
            ("make-obsolete-variable" code nil nil [45960 46039])
            ("make-obsolete-variable" code nil nil [46040 46117])
            ("make-obsolete-variable" code nil nil [46118 46197])
            ("make-obsolete-variable" code nil nil [46198 46287])
            ("make-obsolete-variable" code nil nil [46288 46363])
            ("make-obsolete-variable" code nil nil [46364 46445])
            ("make-obsolete-variable" code nil nil [46446 46529])
            ("make-obsolete-variable" code nil nil [46530 46625])
            ("make-obsolete-variable" code nil nil [46626 46713])
            ("make-obsolete-variable" code nil nil [46714 46795])
            ("make-obsolete-variable" code nil nil [46796 46883])
            ("make-obsolete-variable" code nil nil [46884 46975])
            ("make-obsolete-variable" code nil nil [46976 47041])
            ("make-obsolete-variable" code nil nil [47042 47107])
            ("make-obsolete-variable" code nil nil [47108 47183])
            ("make-obsolete-variable" code nil nil [47184 47287])
            ("make-obsolete-variable" code nil nil [47288 47381])
            ("make-obsolete-variable" code nil nil [47382 47445])
            ("make-obsolete-variable" code nil nil [47446 47586])
            ("make-obsolete-variable" code nil nil [47588 47652])
            ("make-obsolete-variable" code nil nil [47653 47736])
            ("make-obsolete-variable" code nil nil [47737 47809])
            ("make-obsolete-variable" code nil nil [47810 47886])
            ("make-obsolete" code nil nil [47887 47943])
            ("make-obsolete" code nil nil [47944 48004])
            ("make-obsolete" code nil nil [48006 48060])
            ("make-obsolete" code nil nil [48061 48117])
            ("make-obsolete-variable" code nil nil [48119 48215])
            ("make-obsolete-variable" code nil nil [48216 48418])
            ("define-obsolete-variable-alias" code nil nil [48457 48544])
            ("defvaralias" code nil nil [48546 48611])
            ("make-obsolete-variable" code nil nil [48612 48698])
            ("defvaralias" code nil nil [48699 48764])
            ("make-obsolete-variable" code nil nil [48765 48851])
            ("make-obsolete-variable" code nil nil [49097 49161])
            ("defvaralias" code nil nil [49163 49220])
            ("define-obsolete-variable-alias" code nil nil [49445 49531])
            ("define-obsolete-variable-alias" code nil nil [49532 49622])
            ("defalias" code nil nil [49696 49740])
            ("defalias" code nil nil [49741 49785])
            ("defalias" code nil nil [49786 49819])
            ("defalias" code nil nil [49820 49853])
            ("defalias" code nil nil [49854 49889])
            ("defalias" code nil nil [49890 49916])
            ("defalias" code nil nil [49917 49943])
            ("defalias" code nil nil [49944 49966])
            ("defalias" code nil nil [49992 50031])
            ("defalias" code nil nil [50032 50086])
            ("defalias" code nil nil [50087 50157])
            ("defalias" code nil nil [50158 50230])
            ("defalias" code nil nil [50231 50274])
            ("defalias" code nil nil [50275 50319])
            ("defalias" code nil nil [50320 50353])
            ("defalias" code nil nil [50354 50387])
            ("defalias" code nil nil [50419 50462])
            ("defalias" code nil nil [50463 50512])
            ("defalias" code nil nil [50514 50567])
            ("add-hook" function (:arguments ("hook" "function" "append" "local")) nil [50606 52742])
            ("remove-hook" function (:arguments ("hook" "function" "local")) nil [52744 54412])
            ("letrec" function (:arguments ("binders" "body")) nil [54414 55043])
            ("with-wrapper-hook" function (:arguments ("hook" "args" "body")) nil [55045 57988])
            ("add-to-list" function (:arguments ("list-var" "element" "append" "compare-fn")) nil [57990 59293])
            ("add-to-ordered-list" function (:arguments ("list-var" "element" "order")) nil [59296 60615])
            ("add-to-history" function (:arguments ("history-var" "newelt" "maxelt" "keep-all")) nil [60617 61814])
            ("delay-mode-hooks" variable nil nil [61836 61930])
            ("delayed-mode-hooks" variable nil nil [61931 62012])
            ("make-variable-buffer-local" code nil nil [62013 62061])
            ("put" code nil nil [62062 62104])
            ("change-major-mode-after-body-hook" variable nil nil [62106 62220])
            ("after-change-major-mode-hook" variable nil nil [62222 62324])
            ("run-mode-hooks" function (:arguments ("hooks")) nil [62326 63209])
            ("delay-mode-hooks" function (:arguments ("body")) nil [63211 63612])
            ("derived-mode-p" function (:arguments ("modes")) nil [63673 63986])
            ("minor-mode-list" variable (:default-value (quote (auto-save-mode auto-fill-mode abbrev-mode overwrite-mode view-mode hs-minor-mode))) nil [64177 64370])
            ("add-minor-mode" function (:arguments ("toggle" "name" "keymap" "after" "toggle-fun")) nil [64372 67057])
            ("symbol-file" function (:arguments ("symbol" "type")) nil [67078 68316])
            ("locate-library" function
               (:user-visible-flag t
                :arguments ("library" "nosuffix" "path" "interactive-call"))
                nil [68318 69724])
            ("load-history-regexp" function (:arguments ("file")) nil [69765 70401])
            ("load-history-filename-element" function (:arguments ("file-regexp")) nil [70403 70839])
            ("put" code nil nil [70841 70887])
            ("eval-after-load" function (:arguments ("file" "form")) nil [70888 73840])
            ("after-load-functions" variable nil nil [73842 74015])
            ("do-after-load-evaluation" function (:arguments ("abs-file")) nil [74017 75017])
            ("eval-next-after-load" function (:arguments ("file")) nil [75019 75273])
            ("make-obsolete" code nil nil [75274 75335])
            ("display-delayed-warnings" function nil nil [75337 75604])
            ("collapse-delayed-warnings" function nil nil [75606 76285])
            ("delayed-warnings-hook" variable (:default-value (quote (collapse-delayed-warnings display-delayed-warnings))) nil [76415 76755])
            ("process-lines" function (:arguments ("program" "args")) nil [76780 77385])
            ("process-live-p" function (:arguments ("process")) nil [77387 77627])
            ("make-obsolete" code nil nil [77647 77772])
            ("process-kill-without-query" function (:arguments ("process" "_flag")) nil [77773 78117])
            ("process-kill-buffer-query-function" function nil nil [78119 78538])
            ("add-hook" code nil nil [78540 78615])
            ("process-get" function (:arguments ("process" "propname")) nil [78646 78858])
            ("process-put" function (:arguments ("process" "propname" "value")) nil [78860 79099])
            ("read-quoted-char-radix" variable
               (:user-visible-flag t
                :default-value 8)
                nil [79139 79285])
            ("custom-declare-variable-early" code nil nil [79287 79530])
            ("read-key-empty-map" variable
               (:constant-flag t
                :default-value (make-sparse-keymap))
                nil [79532 79582])
            ("read-key-delay" variable (:default-value 0.01) nil [79584 79612])
            ("read-key" function (:arguments ("prompt")) nil [79661 82099])
            ("read-quoted-char" function (:arguments ("prompt")) nil [82101 84696])
            ("read-passwd" function (:arguments ("prompt" "confirm" "default")) nil [84698 87396])
            ("read-number" function (:arguments ("prompt" "default")) nil [87460 88326])
            ("read-char-choice" function (:arguments ("prompt" "chars" "inhibit-keyboard-quit")) nil [88328 89955])
            ("sit-for" function (:arguments ("seconds" "nodisp" "obsolete")) nil [89957 91464])
            ("set-advertised-calling-convention" code nil nil [91465 91544])
            ("y-or-n-p" function (:arguments ("prompt")) nil [91546 94422])
            ("atomic-change-group" function (:arguments ("body")) nil [94453 95659])
            ("prepare-change-group" function (:arguments ("buffer")) nil [95661 97137])
            ("activate-change-group" function (:arguments ("handle")) nil [97139 97377])
            ("accept-change-group" function (:arguments ("handle")) nil [97379 97664])
            ("cancel-change-group" function (:arguments ("handle")) nil [97666 98837])
            ("defalias" code nil nil [98895 98946])
            ("force-mode-line-update" function (:arguments ("all")) nil [98948 99322])
            ("momentary-string-display" function (:arguments ("string" "pos" "exit-char" "message")) nil [99324 100777])
            ("copy-overlay" function (:arguments ("o")) nil [100806 101380])
            ("remove-overlays" function (:arguments ("beg" "end" "name" "val")) nil [101382 102390])
            ("suspend-hook" variable nil nil [102412 102496])
            ("suspend-resume-hook" variable nil nil [102498 102596])
            ("temp-buffer-show-hook" variable nil nil [102598 102814])
            ("temp-buffer-setup-hook" variable nil nil [102816 103047])
            ("buffer-file-type" variable nil nil [103153 103403])
            ("put" code nil nil [103512 103565])
            ("put" code nil nil [103566 103637])
            ("user-emacs-directory" variable
               (:constant-flag t
                :default-value (if (eq system-type (quote ms-dos)) "~/_emacs.d/" "~/.emacs.d/"))
                nil [103639 104014])
            ("locate-user-emacs-file" function (:arguments ("new-name" "old-name")) nil [104016 105008])
            ("find-tag-default" function nil nil [105041 105991])
            ("play-sound" function (:arguments ("sound")) nil [105993 106812])
            ("declare-function" code nil nil [106814 106870])
            ("shell-quote-argument" function (:arguments ("argument")) nil [106872 109017])
            ("string-or-null-p" function (:arguments ("object")) nil [109019 109156])
            ("booleanp" function (:arguments ("object")) nil [109158 109316])
            ("field-at-pos" function (:arguments ("pos")) nil [109318 109588])
            ("sha1" function (:arguments ("object" "start" "end" "binary")) nil [109590 109953])
            ("yank-excluded-properties" variable nil nil [110004 110037])
            ("remove-yank-excluded-properties" function (:arguments ("start" "end")) nil [110039 111384])
            ("yank-undo-function" variable nil nil [111386 111413])
            ("insert-for-yank" function (:arguments ("string")) nil [111415 111774])
            ("insert-for-yank-1" function (:arguments ("string")) nil [111776 114713])
            ("insert-buffer-substring-no-properties" function (:arguments ("buffer" "start" "end")) nil [114715 115200])
            ("insert-buffer-substring-as-yank" function (:arguments ("buffer" "start" "end")) nil [115202 115861])
            ("start-process-shell-command" function (:arguments ("name" "buffer" "args")) nil [115899 116812])
            ("set-advertised-calling-convention" code nil nil [116813 116942])
            ("start-file-process-shell-command" function (:arguments ("name" "buffer" "args")) nil [116944 117363])
            ("set-advertised-calling-convention" code nil nil [117364 117498])
            ("call-process-shell-command" function (:arguments ("command" "infile" "buffer" "display" "args")) nil [117500 118945])
            ("process-file-shell-command" function (:arguments ("command" "infile" "buffer" "display" "args")) nil [118947 119391])
            ("with-current-buffer" function (:arguments ("buffer-or-name" "body")) nil [119446 119834])
            ("with-selected-window" function (:arguments ("window" "body")) nil [119836 121434])
            ("with-selected-frame" function (:arguments ("frame" "body")) nil [121436 122177])
            ("save-window-excursion" function (:arguments ("body")) nil [122179 122998])
            ("with-output-to-temp-buffer" function (:arguments ("bufname" "body")) nil [123000 125151])
            ("with-temp-file" function (:arguments ("file" "body")) nil [125153 125848])
            ("with-temp-message" function (:arguments ("message" "body")) nil [125850 126777])
            ("with-temp-buffer" function (:arguments ("body")) nil [126779 127338])
            ("with-silent-modifications" function (:arguments ("body")) nil [127340 128536])
            ("with-output-to-string" function (:arguments ("body")) nil [128538 128983])
            ("with-local-quit" function (:arguments ("body")) nil [128985 129740])
            ("while-no-input" function (:arguments ("body")) nil [129742 130242])
            ("condition-case-unless-debug" function (:arguments ("var" "bodyform" "handlers")) nil [130244 130749])
            ("define-obsolete-function-alias" code nil nil [130751 130846])
            ("with-demoted-errors" function (:arguments ("body")) nil [130848 131344])
            ("combine-after-change-calls" function (:arguments ("body")) nil [131346 132041])
            ("with-case-table" function (:arguments ("table" "body")) nil [132043 132564])
            ("save-match-data-internal" variable nil nil [132597 132630])
            ("save-match-data" function (:arguments ("body")) nil [132888 133568])
            ("match-string" function (:arguments ("num" "string")) nil [133570 134215])
            ("match-string-no-properties" function (:arguments ("num" "string")) nil [134217 134941])
            ("match-substitute-replacement" function (:arguments ("replacement" "fixedcase" "literal" "string" "subexp")) nil [134944 135593])
            ("looking-back" function (:arguments ("regexp" "limit" "greedy")) nil [135596 136680])
            ("looking-at-p" function (:arguments ("regexp")) nil [136682 136860])
            ("string-match-p" function (:arguments ("regexp" "string" "start")) nil [136862 137082])
            ("subregexp-context-p" function (:arguments ("regexp" "pos" "start")) nil [137084 138994])
            ("split-string-default-separators" variable
               (:constant-flag t
                :default-value "[ 	
]+")
                nil [139016 139369])
            ("split-string" function (:arguments ("string" "separators" "omit-nulls")) nil [139631 141532])
            ("combine-and-quote-strings" function (:arguments ("strings" "separator")) nil [141534 142095])
            ("split-string-and-unquote" function (:arguments ("string" "separator")) nil [142097 142733])
            ("subst-char-in-string" function (:arguments ("fromchar" "tochar" "string" "inplace")) nil [142767 143171])
            ("replace-regexp-in-string" function (:arguments ("regexp" "rep" "string" "fixedcase" "literal" "subexp" "start")) nil [143173 145753])
            ("string-prefix-p" function (:arguments ("str1" "str2" "ignore-case")) nil [145756 146055])
            ("bidi-string-mark-left-to-right" function (:arguments ("str")) nil [146057 146840])
            ("add-to-invisibility-spec" function (:arguments ("element")) nil [146868 147211])
            ("remove-from-invisibility-spec" function (:arguments ("element")) nil [147213 147437])
            ("with-syntax-table" function (:arguments ("table" "body")) nil [147461 148097])
            ("make-syntax-table" function (:arguments ("oldtable")) nil [148099 148419])
            ("syntax-after" function (:arguments ("pos")) nil [148421 148782])
            ("syntax-class" function (:arguments ("syntax")) nil [148784 148952])
            ("text-clone-maintain" function (:arguments ("ol1" "after" "beg" "end" "_len")) nil [148973 151003])
            ("text-clone-create" function (:arguments ("start" "end" "spreadp" "syntax")) nil [151005 153192])
            ("define-mail-user-agent" function (:arguments ("symbol" "composefunc" "sendfunc" "abortfunc" "hookvar")) nil [153300 154878])
            ("progress-reporter-update" function (:arguments ("reporter" "value")) nil [155462 156229])
            ("make-progress-reporter" function (:arguments ("message" "min-value" "max-value" "current-value" "min-change" "min-time")) nil [156231 158076])
            ("progress-reporter-force-update" function (:arguments ("reporter" "value" "new-message")) nil [158078 158577])
            ("progress-reporter--pulse-characters" variable (:default-value ["-" "\\" "|" "/"]) nil [158579 158696])
            ("progress-reporter-do-update" function (:arguments ("reporter" "value")) nil [158698 160404])
            ("progress-reporter-done" function (:arguments ("reporter")) nil [160406 160561])
            ("dotimes-with-progress-reporter" function (:arguments ("spec" "message" "body")) nil [160563 161667])
            ("version-separator" variable
               (:constant-flag t
                :default-value ".")
                nil [161704 161863])
            ("version-regexp-alist" variable
               (:constant-flag t
                :default-value (quote (("^[-_+ ]?alpha$" . -3) ("^[-_+]$" . -3) ("^[-_+ ]cvs$" . -3) ("^[-_+ ]?beta$" . -2) ("^[-_+ ]?\\(pre\\|rcc\\)$" . -1))))
                nil [161866 163091])
            ("version-to-list" function (:arguments ("ver")) nil [163094 165432])
            ("version-list-<" function (:arguments ("l1" "l2")) nil [165435 166266])
            ("version-list-=" function (:arguments ("l1" "l2")) nil [166269 167068])
            ("version-list-<=" function (:arguments ("l1" "l2")) nil [167071 167856])
            ("version-list-not-zero" function (:arguments ("lst")) nil [167858 168168])
            ("version<" function (:arguments ("v1" "v2")) nil [168171 168627])
            ("version<=" function (:arguments ("v1" "v2")) nil [168630 169100])
            ("version=" function (:arguments ("v1" "v2")) nil [169102 169548])
            ("menu-bar-separator" variable
               (:constant-flag t
                :default-value (quote ("--")))
                nil [169562 169624])
            ("when" code nil nil [169786 169911]))          
    :file "subr.el"
    :pointmax 169935
    :fsize 169935
    :lastmodtime '(20456 43103)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "linum.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("linum-version" variable
               (:constant-flag t
                :default-value "0.9x")
                nil [1132 1163])
            ("linum-overlays" variable nil nil [1165 1224])
            ("linum-available" variable nil nil [1225 1285])
            ("linum-before-numbering-hook" variable nil nil [1286 1389])
            ("mapc" code nil nil [1391 1460])
            ("linum" customgroup (:user-visible-flag t) nil [1462 1546])
            ("linum-format" variable (:default-value (quote dynamic)) nil [1563 1906])
            ("linum" variable
               (:default-value (quote ((t :inherit (shadow default))))
                :type "face")
                nil [1908 2034])
            ("linum-eager" variable (:default-value t) nil [2036 2299])
            ("linum-delay" variable nil nil [2301 2421])
            ("define-minor-mode" code nil nil [2438 4280])
            ("define-globalized-minor-mode" code nil nil [4297 4365])
            ("linum-on" function nil nil [4367 4430])
            ("linum-delete-overlays" function nil nil [4432 4715])
            ("linum-update-current" function nil nil [4717 4830])
            ("linum-update" function (:arguments ("buffer")) nil [4832 5247])
            ("linum-update-window" function (:arguments ("win")) nil [5249 7307])
            ("linum-after-change" function (:arguments ("beg" "end" "_len")) nil [7309 7577])
            ("linum-after-scroll" function (:arguments ("win" "_start")) nil [7579 7655])
            ("linum-schedule" function nil nil [7720 7874])
            ("linum-unload-function" function nil nil [7989 8115])
            ("linum" package nil nil [8117 8133]))          
    :file "linum.el"
    :pointmax 8158
    :fsize 8157
    :lastmodtime '(20456 43097)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "custom.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("widget" include nil nil [1229 1246])
            ("custom-define-hook" variable nil nil [1248 1397])
            ("custom-dont-initialize" variable nil nil [1399 1582])
            ("custom-current-group-alist" variable nil nil [1584 1697])
            ("custom-initialize-default" function (:arguments ("symbol" "value")) nil [1727 2235])
            ("custom-initialize-set" function (:arguments ("symbol" "value")) nil [2237 2765])
            ("custom-initialize-reset" function (:arguments ("symbol" "value")) nil [2767 3488])
            ("custom-initialize-changed" function (:arguments ("symbol" "value")) nil [3490 4069])
            ("custom-delayed-init-variables" variable nil nil [4071 4168])
            ("custom-initialize-delay" function (:arguments ("symbol" "_value")) nil [4170 5166])
            ("custom-declare-variable" function (:arguments ("symbol" "default" "doc" "args")) nil [5168 7767])
            ("defcustom" function (:arguments ("symbol" "standard" "doc" "args")) nil [7769 13840])
            ("defface" function (:arguments ("face" "spec" "doc" "args")) nil [13868 16846])
            ("custom-current-group" function nil nil [16875 16964])
            ("custom-declare-group" function (:arguments ("symbol" "members" "doc" "args")) nil [16966 18027])
            ("defgroup" function (:arguments ("symbol" "members" "doc" "args")) nil [18029 19189])
            ("custom-add-to-group" function (:arguments ("group" "option" "widget")) nil [19191 19537])
            ("custom-group-of-mode" function (:arguments ("mode")) nil [19539 19941])
            ("custom-handle-all-keywords" function (:arguments ("symbol" "args" "type")) nil [19960 20550])
            ("custom-handle-keyword" function (:arguments ("symbol" "keyword" "value" "type")) nil [20552 21263])
            ("custom-add-dependencies" function (:arguments ("symbol" "value")) nil [21265 22018])
            ("custom-add-option" function (:arguments ("symbol" "option")) nil [22020 22471])
            ("defalias" code nil nil [22472 22528])
            ("custom-add-link" function (:arguments ("symbol" "widget")) nil [22530 22766])
            ("custom-add-version" function (:arguments ("symbol" "version")) nil [22768 22918])
            ("custom-add-package-version" function (:arguments ("symbol" "version")) nil [22920 23094])
            ("custom-add-load" function (:arguments ("symbol" "load")) nil [23096 23392])
            ("custom-autoload" function (:arguments ("symbol" "load" "noset")) nil [23394 23680])
            ("custom-variable-p" function (:arguments ("variable")) nil [23739 24145])
            ("custom-note-var-changed" function (:arguments ("variable")) nil [24147 24442])
            ("custom-load-recursion" variable nil nil [24585 24661])
            ("custom-load-symbol" function (:arguments ("symbol")) nil [24663 25920])
            ("custom-local-buffer" variable nil nil [25923 26243])
            ("put" code nil nil [26244 26289])
            ("custom-set-default" function (:arguments ("variable" "value")) nil [26291 26672])
            ("custom-set-minor-mode" function (:arguments ("variable" "value")) nil [26674 27098])
            ("custom-quote" function (:arguments ("sexp")) nil [27100 27438])
            ("customize-mark-to-save" function (:arguments ("symbol")) nil [27440 28603])
            ("customize-mark-as-set" function (:arguments ("symbol")) nil [28605 29760])
            ("custom-reevaluate-setting" function (:arguments ("symbol")) nil [29762 30234])
            ("custom-known-themes" variable (:default-value (quote (user changed))) nil [32061 32449])
            ("custom-theme-p" function (:arguments ("theme")) nil [32451 32560])
            ("custom-check-theme" function (:arguments ("theme")) nil [32562 32740])
            ("custom-push-theme" function (:arguments ("prop" "symbol" "theme" "mode" "value")) nil [32742 34887])
            ("custom-fix-face-spec" function (:arguments ("spec")) nil [34889 35659])
            ("custom-set-variables" function (:arguments ("args")) nil [35662 36273])
            ("custom-theme-set-variables" function (:arguments ("theme" "args")) nil [36275 39748])
            ("deftheme" function (:arguments ("theme" "doc" "ignored")) nil [40344 40938])
            ("custom-declare-theme" function (:arguments ("theme" "feature" "doc" "ignored")) nil [40940 41428])
            ("custom-make-theme-feature" function (:arguments ("theme")) nil [41430 41935])
            ("custom-theme-directory" variable (:default-value user-emacs-directory) nil [41959 42306])
            ("custom-theme-load-path" variable (:default-value (list (quote custom-theme-directory) t)) nil [42308 43109])
            ("custom--inhibit-theme-enable" variable nil nil [43111 43397])
            ("provide-theme" function (:arguments ("theme")) nil [43399 43797])
            ("custom-safe-themes" variable (:default-value (quote (default))) nil [43799 44419])
            ("load-theme" function
               (:user-visible-flag t
                :arguments ("theme" "no-confirm" "no-enable"))
                nil [44421 47239])
            ("custom-theme-load-confirm" function (:arguments ("hash")) nil [47241 48494])
            ("custom-theme-name-valid-p" function (:arguments ("name")) nil [48496 48761])
            ("custom-available-themes" function nil nil [48763 49295])
            ("custom-theme--load-path" function nil nil [49297 49616])
            ("enable-theme" function
               (:user-visible-flag t
                :arguments ("theme"))
                nil [49663 50899])
            ("custom-enabled-themes" variable nil nil [50901 52211])
            ("custom-theme-enabled-p" function (:arguments ("theme")) nil [52213 52331])
            ("disable-theme" function
               (:user-visible-flag t
                :arguments ("theme"))
                nil [52333 53932])
            ("custom--frame-color-default" function (:arguments ("frame" "attribute" "resource-attr" "resource-class" "tty-default" "x-default")) nil [53934 54294])
            ("custom-variable-theme-value" function (:arguments ("variable")) nil [54296 54689])
            ("custom-theme-recalc-variable" function (:arguments ("variable")) nil [54691 55146])
            ("custom-theme-recalc-face" function (:arguments ("face")) nil [55148 55420])
            ("custom-theme-reset-variables" function (:arguments ("theme" "args")) nil [55637 56008])
            ("custom-reset-variables" function (:arguments ("args")) nil [56010 56351])
            ("while" code nil nil [56432 56611])
            ("custom" package nil nil [56613 56630]))          
    :file "custom.el"
    :pointmax 56656
    :fsize 56655
    :lastmodtime '(20456 43089)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "widget.el"
    :file "widget.el"
    :fsize 3845
    :lastmodtime '(20456 43106)
    )
   )
  :file "!drive_c!Program Files (x86)!emacs-24.1!lisp!semantic.cache"
  :semantic-tag-version "2.1"
  :semanticdb-version "2.1"
  )
